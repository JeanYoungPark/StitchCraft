import React, { useState } from 'react';
import {
  View,
  Text,
  StyleSheet,
  SafeAreaView,
  TouchableOpacity,
  Alert,
} from 'react-native';

interface UserSettings {
  measurementUnit: 'metric' | 'imperial';
}

interface UserProfile {
  name: string;
  level: string;
  avatar: string;
}

const ProfileScreen: React.FC = () => {
  const [settings, setSettings] = useState<UserSettings>({
    measurementUnit: 'metric',
  });

  const [profile, setProfile] = useState<UserProfile>({
    name: 'Îú®Í∞úÏßà Ï¥àÎ≥¥Ïûê',
    level: 'Level 2 - Ïó¥Ï†ïÏ†ÅÏù∏ Îú®Í∞úÍæº',
    avatar: 'üß∂'
  });

  const handleNameChange = () => {
    Alert.alert(
      "Ïù¥Î¶Ñ Î≥ÄÍ≤Ω",
      "ÏÉàÎ°úÏö¥ Ïù¥Î¶ÑÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî",
      [
        { text: "Ï∑®ÏÜå", style: "cancel" },
        { text: "Îú®Í∞úÏßà Ï¥àÎ≥¥Ïûê", onPress: () => setProfile(prev => ({ ...prev, name: 'Îú®Í∞úÏßà Ï¥àÎ≥¥Ïûê' })) },
        { text: "Îú®Í∞úÏßà Ïï†Ìò∏Í∞Ä", onPress: () => setProfile(prev => ({ ...prev, name: 'Îú®Í∞úÏßà Ïï†Ìò∏Í∞Ä' })) },
        { text: "Îú®Í∞úÏßà ÎßàÏä§ÌÑ∞", onPress: () => setProfile(prev => ({ ...prev, name: 'Îú®Í∞úÏßà ÎßàÏä§ÌÑ∞' })) }
      ]
    );
  };

  const handleLevelChange = () => {
    Alert.alert(
      "Î†àÎ≤® Î≥ÄÍ≤Ω",
      "ÌòÑÏû¨ Î†àÎ≤®ÏùÑ ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî",
      [
        { text: "Ï∑®ÏÜå", style: "cancel" },
        { text: "Level 1 - Îú®Í∞úÏßà ÏûÖÎ¨∏Ïûê", onPress: () => setProfile(prev => ({ ...prev, level: 'Level 1 - Îú®Í∞úÏßà ÏûÖÎ¨∏Ïûê' })) },
        { text: "Level 2 - Ïó¥Ï†ïÏ†ÅÏù∏ Îú®Í∞úÍæº", onPress: () => setProfile(prev => ({ ...prev, level: 'Level 2 - Ïó¥Ï†ïÏ†ÅÏù∏ Îú®Í∞úÍæº' })) },
        { text: "Level 3 - ÏàôÎ†®Îêú Îú®Í∞úÍæº", onPress: () => setProfile(prev => ({ ...prev, level: 'Level 3 - ÏàôÎ†®Îêú Îú®Í∞úÍæº' })) },
        { text: "Level 4 - Îú®Í∞úÏßà Ï†ÑÎ¨∏Í∞Ä", onPress: () => setProfile(prev => ({ ...prev, level: 'Level 4 - Îú®Í∞úÏßà Ï†ÑÎ¨∏Í∞Ä' })) }
      ]
    );
  };

  const handleAvatarChange = () => {
    Alert.alert(
      "ÏïÑÎ∞îÌÉÄ Î≥ÄÍ≤Ω",
      "ÏÉàÎ°úÏö¥ ÏïÑÎ∞îÌÉÄÎ•º ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî",
      [
        { text: "Ï∑®ÏÜå", style: "cancel" },
        { text: "üß∂", onPress: () => setProfile(prev => ({ ...prev, avatar: 'üß∂' })) },
        { text: "üßµ", onPress: () => setProfile(prev => ({ ...prev, avatar: 'üßµ' })) },
        { text: "‚úÇÔ∏è", onPress: () => setProfile(prev => ({ ...prev, avatar: '‚úÇÔ∏è' })) },
        { text: "ü™°", onPress: () => setProfile(prev => ({ ...prev, avatar: 'ü™°' })) }
      ]
    );
  };

  const handleMeasurementUnitChange = () => {
    Alert.alert(
      "Ï∏°Ï†ï Îã®ÏúÑ Î≥ÄÍ≤Ω",
      "Ï∏°Ï†ï Îã®ÏúÑÎ•º ÏÑ†ÌÉùÌï¥Ï£ºÏÑ∏Ïöî",
      [
        { text: "Ï∑®ÏÜå", style: "cancel" },
        { 
          text: "ÎØ∏ÌÑ∞Î≤ï (cm, mm)", 
          onPress: () => setSettings(prev => ({ ...prev, measurementUnit: 'metric' }))
        },
        { 
          text: "ÏïºÎìúÌååÏö¥ÎìúÎ≤ï (inch)", 
          onPress: () => setSettings(prev => ({ ...prev, measurementUnit: 'imperial' }))
        }
      ]
    );
  };

  const handleContact = () => {
    Alert.alert(
      "Î¨∏ÏùòÌïòÍ∏∞",
      "Í∞úÎ∞úÏûêÏóêÍ≤å Î¨∏ÏùòÏÇ¨Ìï≠Ïù¥ÎÇò Ï†úÏïàÏùÑ Î≥¥ÎÇ¥ÏãúÍ≤†ÏäµÎãàÍπå?",
      [
        { text: "Ï∑®ÏÜå", style: "cancel" },
        { text: "Î¨∏ÏùòÌïòÍ∏∞", onPress: () => console.log("Î¨∏ÏùòÌïòÍ∏∞ Í∏∞Îä•") }
      ]
    );
  };

  return (
    <SafeAreaView style={styles.container}>
      <View style={styles.content}>
        {/* ÌîÑÎ°úÌïÑ Ìó§Îçî */}
        <View style={styles.profileHeader}>
          <Text style={styles.headerTitle}>ÎÇ¥ ÌîÑÎ°úÌïÑ</Text>
          <Text style={styles.headerSubtitle}>ÌÉ≠ÌïòÏó¨ Ìé∏ÏßëÌïòÏÑ∏Ïöî</Text>
        </View>

        {/* ÌîÑÎ°úÌïÑ ÏÑπÏÖò */}
        <View style={styles.profileSection}>
          <TouchableOpacity 
            style={styles.avatarContainer} 
            onPress={handleAvatarChange}
            activeOpacity={0.7}
          >
            <View style={styles.avatar}>
              <Text style={styles.avatarText}>{profile.avatar}</Text>
            </View>
            <View style={styles.editIcon}>
              <Text style={styles.editIconText}>‚úèÔ∏è</Text>
            </View>
          </TouchableOpacity>
          
          <View style={styles.profileInfo}>
            <TouchableOpacity 
              style={styles.editableField}
              onPress={handleNameChange}
              activeOpacity={0.7}
            >
              <Text style={styles.userName}>{profile.name}</Text>
              <Text style={styles.editHint}>Ïù¥Î¶Ñ Î≥ÄÍ≤Ω</Text>
            </TouchableOpacity>
            
            <TouchableOpacity 
              style={styles.editableField}
              onPress={handleLevelChange}
              activeOpacity={0.7}
            >
              <Text style={styles.userLevel}>{profile.level}</Text>
              <Text style={styles.editHint}>Î†àÎ≤® Î≥ÄÍ≤Ω</Text>
            </TouchableOpacity>
          </View>
        </View>

        {/* Î©îÎâ¥ ÏÑπÏÖò */}
        <View style={styles.menuSection}>
          <TouchableOpacity style={styles.menuItem} onPress={handleMeasurementUnitChange}>
            <View style={styles.menuLeft}>
              <Text style={styles.menuIcon}>üìè</Text>
              <View style={styles.menuText}>
                <Text style={styles.menuTitle}>Ï∏°Ï†ï Îã®ÏúÑ</Text>
                <Text style={styles.menuDescription}>
                  {settings.measurementUnit === 'metric' ? 'ÎØ∏ÌÑ∞Î≤ï (cm, mm)' : 'ÏïºÎìúÌååÏö¥ÎìúÎ≤ï (inch)'}
                </Text>
              </View>
            </View>
            <Text style={styles.menuArrow}>‚Ä∫</Text>
          </TouchableOpacity>

          <TouchableOpacity style={styles.menuItem} onPress={handleContact}>
            <View style={styles.menuLeft}>
              <Text style={styles.menuIcon}>üí¨</Text>
              <View style={styles.menuText}>
                <Text style={styles.menuTitle}>Î¨∏ÏùòÌïòÍ∏∞</Text>
                <Text style={styles.menuDescription}>Î≤ÑÍ∑∏ Ïã†Í≥† Î∞è Ï†úÏïà</Text>
              </View>
            </View>
            <Text style={styles.menuArrow}>‚Ä∫</Text>
          </TouchableOpacity>
        </View>

        {/* Ïï± Ï†ïÎ≥¥ */}
        <View style={styles.appInfo}>
          <Text style={styles.appVersion}>StitchCraft v1.0.0</Text>
        </View>
      </View>
    </SafeAreaView>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: '#FDF6E3',
    paddingBottom: 60, // Tab bar height
  },
  content: {
    flex: 1,
  },
  profileHeader: {
    paddingHorizontal: 24,
    paddingTop: 20,
    paddingBottom: 16,
  },
  headerTitle: {
    fontSize: 28,
    fontWeight: 'bold',
    color: '#2D3748',
    marginBottom: 4,
  },
  headerSubtitle: {
    fontSize: 16,
    color: '#718096',
    fontStyle: 'italic',
  },
  profileSection: {
    backgroundColor: '#FFFFFF',
    paddingVertical: 32,
    paddingHorizontal: 24,
    marginBottom: 20,
    borderRadius: 20,
    marginHorizontal: 16,
    elevation: 3,
    shadowColor: '#6B73FF',
    shadowOffset: { width: 0, height: 4 },
    shadowOpacity: 0.12,
    shadowRadius: 8,
    borderWidth: 1,
    borderColor: '#F7FAFC',
  },
  avatarContainer: {
    alignItems: 'center',
    marginBottom: 24,
    position: 'relative',
  },
  avatar: {
    width: 120,
    height: 120,
    borderRadius: 60,
    backgroundColor: '#6B73FF',
    justifyContent: 'center',
    alignItems: 'center',
    elevation: 2,
    shadowColor: '#6B73FF',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.2,
    shadowRadius: 4,
  },
  avatarText: {
    fontSize: 48,
  },
  editIcon: {
    position: 'absolute',
    bottom: 8,
    right: 8,
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    width: 32,
    height: 32,
    justifyContent: 'center',
    alignItems: 'center',
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.1,
    shadowRadius: 2,
    borderWidth: 2,
    borderColor: '#6B73FF',
  },
  editIconText: {
    fontSize: 14,
  },
  profileInfo: {
    alignItems: 'center',
    width: '100%',
  },
  editableField: {
    alignItems: 'center',
    paddingVertical: 12,
    paddingHorizontal: 20,
    marginVertical: 4,
    borderRadius: 12,
    backgroundColor: '#F7FAFC',
    width: '100%',
    borderWidth: 1,
    borderColor: '#E2E8F0',
  },
  userName: {
    fontSize: 24,
    fontWeight: 'bold',
    color: '#2D3748',
    marginBottom: 4,
    textAlign: 'center',
  },
  userLevel: {
    fontSize: 16,
    color: '#4A5568',
    marginBottom: 4,
    textAlign: 'center',
  },
  editHint: {
    fontSize: 12,
    color: '#6B73FF',
    fontWeight: '500',
    opacity: 0.8,
  },
  menuSection: {
    backgroundColor: '#FFFFFF',
    borderRadius: 16,
    marginHorizontal: 16,
    marginBottom: 20,
    elevation: 2,
    shadowColor: '#000',
    shadowOffset: { width: 0, height: 2 },
    shadowOpacity: 0.08,
    shadowRadius: 6,
    borderWidth: 1,
    borderColor: '#F7FAFC',
  },
  menuItem: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingVertical: 18,
    paddingHorizontal: 20,
    borderBottomWidth: 1,
    borderBottomColor: '#F1F5F9',
  },
  menuLeft: {
    flexDirection: 'row',
    alignItems: 'center',
    flex: 1,
  },
  menuIcon: {
    fontSize: 24,
    marginRight: 16,
    backgroundColor: '#F7FAFC',
    borderRadius: 20,
    width: 40,
    height: 40,
    textAlign: 'center',
    lineHeight: 40,
  },
  menuText: {
    flex: 1,
  },
  menuTitle: {
    fontSize: 16,
    color: '#2D3748',
    fontWeight: '600',
    marginBottom: 3,
  },
  menuDescription: {
    fontSize: 14,
    color: '#718096',
  },
  menuArrow: {
    fontSize: 18,
    color: '#6B73FF',
    fontWeight: 'bold',
  },
  appInfo: {
    alignItems: 'center',
    paddingVertical: 24,
    marginTop: 'auto',
  },
  appVersion: {
    fontSize: 14,
    color: '#A0ADB8',
    fontWeight: '500',
    backgroundColor: '#F7FAFC',
    paddingHorizontal: 16,
    paddingVertical: 8,
    borderRadius: 12,
  },
});

export default ProfileScreen;